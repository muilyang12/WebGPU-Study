(()=>{"use strict";var e={949:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.checkWebGPU=void 0,t.checkWebGPU=()=>navigator.gpu?"Great, your current browser supports WebGPU.":"It's sad, your current browser doesn't support WebGPU."},607:function(e,t,n){var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{u(r.next(e))}catch(e){i(e)}}function c(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,c)}u((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});const o=n(949),i=n(708),a=[{x:-.75,y:.75},{x:.75,y:-.75},{x:.75,y:.75},{x:-.75,y:-.75}],c=[],u=(e=a)=>r(void 0,void 0,void 0,(function*(){var t;const n=(0,o.checkWebGPU)();if(!navigator.gpu)return void(document.querySelector("#gpu-check").innerHTML+=n);const r=document.getElementById("canvas-webgpu").getContext("webgpu"),a=yield null===(t=navigator.gpu)||void 0===t?void 0:t.requestAdapter(),c=yield null==a?void 0:a.requestDevice(),u="bgra8unorm";r.configure({device:c,format:u,alphaMode:"opaque"});const d=(0,i.Shaders)(e),s=c.createRenderPipeline({layout:"auto",vertex:{module:c.createShaderModule({code:d.vertex}),entryPoint:"main"},fragment:{module:c.createShaderModule({code:d.fragment}),entryPoint:"main",targets:[{format:u}]},primitive:{topology:"line-list",stripIndexFormat:void 0}}),v=r.getCurrentTexture().createView(),l=c.createCommandEncoder(),f=l.beginRenderPass({colorAttachments:[{view:v,clearValue:{r:1,g:1,b:1,a:1},loadOp:"clear",storeOp:"store"}]});f.setPipeline(s),f.draw(e.length),f.end(),c.queue.submit([l.finish()])}));u();const d=document.querySelector("#canvas-webgpu");d.addEventListener("click",(e=>{const t=(e.offsetX-.5*d.width)/(.5*d.width),n=(-e.offsetY+.5*d.height)/(.5*d.height);c.push({x:t,y:n}),u(c)}))},708:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Shaders=void 0,t.Shaders=e=>{let t="";return e.forEach((e=>{t+=`vec2<f32>(${e.x}, ${e.y}),\n`})),{vertex:`\n        @vertex\n        fn main(@builtin(vertex_index) VertexIndex: u32) -> @builtin(position) vec4<f32> {\n            var pos = array<vec2<f32>, ${e.length}>(             \n                ${t}\n            );\n            return vec4<f32>(pos[VertexIndex], 0.0, 1.0);\n        }\n    `,fragment:"\n        @fragment\n        fn main() -> @location(0) vec4<f32> {\n            return vec4<f32>(0.0, 0.0, 0.0, 1.0);\n        }\n    "}}}},t={};!function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r].call(i.exports,i,i.exports,n),i.exports}(607)})();